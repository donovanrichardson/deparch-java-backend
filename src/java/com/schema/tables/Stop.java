/*
 * This file is generated by jOOQ.
 */
package com.schema.tables;


import com.schema.Gtfs;
import com.schema.Indexes;
import com.schema.Keys;
import com.schema.tables.records.StopRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Stop extends TableImpl<StopRecord> {

    private static final long serialVersionUID = 775703565;

    /**
     * The reference instance of <code>gtfs.stop</code>
     */
    public static final Stop STOP = new Stop();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StopRecord> getRecordType() {
        return StopRecord.class;
    }

    /**
     * The column <code>gtfs.stop.stop_id</code>.
     */
    public final TableField<StopRecord, String> STOP_ID = createField("stop_id", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>gtfs.stop.stop_code</code>.
     */
    public final TableField<StopRecord, String> STOP_CODE = createField("stop_code", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>gtfs.stop.stop_name</code>.
     */
    public final TableField<StopRecord, String> STOP_NAME = createField("stop_name", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>gtfs.stop.stop_desc</code>.
     */
    public final TableField<StopRecord, String> STOP_DESC = createField("stop_desc", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>gtfs.stop.stop_lat</code>.
     */
    public final TableField<StopRecord, Double> STOP_LAT = createField("stop_lat", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>gtfs.stop.stop_lon</code>.
     */
    public final TableField<StopRecord, Double> STOP_LON = createField("stop_lon", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>gtfs.stop.stop_url</code>.
     */
    public final TableField<StopRecord, String> STOP_URL = createField("stop_url", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>gtfs.stop.location_type</code>.
     */
    public final TableField<StopRecord, UByte> LOCATION_TYPE = createField("location_type", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>gtfs.stop.parent_station</code>.
     */
    public final TableField<StopRecord, String> PARENT_STATION = createField("parent_station", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>gtfs.stop.wheelchair_boarding</code>.
     */
    public final TableField<StopRecord, Byte> WHEELCHAIR_BOARDING = createField("wheelchair_boarding", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>gtfs.stop.feed_version</code>.
     */
    public final TableField<StopRecord, String> FEED_VERSION = createField("feed_version", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>gtfs.stop</code> table reference
     */
    public Stop() {
        this(DSL.name("stop"), null);
    }

    /**
     * Create an aliased <code>gtfs.stop</code> table reference
     */
    public Stop(String alias) {
        this(DSL.name(alias), STOP);
    }

    /**
     * Create an aliased <code>gtfs.stop</code> table reference
     */
    public Stop(Name alias) {
        this(alias, STOP);
    }

    private Stop(Name alias, Table<StopRecord> aliased) {
        this(alias, aliased, null);
    }

    private Stop(Name alias, Table<StopRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Stop(Table<O> child, ForeignKey<O, StopRecord> key) {
        super(child, key, STOP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gtfs.GTFS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STOP_PARENT_STATION, Indexes.STOP_PRIMARY, Indexes.STOP_STOP_FEED_VERSION_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StopRecord> getPrimaryKey() {
        return Keys.KEY_STOP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StopRecord>> getKeys() {
        return Arrays.<UniqueKey<StopRecord>>asList(Keys.KEY_STOP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StopRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StopRecord, ?>>asList(Keys.STOP_IBFK_1, Keys.STOP_FEED_VERSION_FK);
    }

    public com.schema.tables.Stop stop() {
        return new com.schema.tables.Stop(this, Keys.STOP_IBFK_1);
    }

    public FeedVersion feedVersion() {
        return new FeedVersion(this, Keys.STOP_FEED_VERSION_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Stop as(String alias) {
        return new Stop(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Stop as(Name alias) {
        return new Stop(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Stop rename(String name) {
        return new Stop(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Stop rename(Name name) {
        return new Stop(name, null);
    }
}
