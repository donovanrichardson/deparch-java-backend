/*
 * This file is generated by jOOQ.
 */
package com.schema.tables.records;


import com.schema.tables.Frequency;

import java.sql.Time;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FrequencyRecord extends UpdatableRecordImpl<FrequencyRecord> implements Record6<String, Time, Time, UInteger, Byte, String> {

    private static final long serialVersionUID = 879899952;

    /**
     * Setter for <code>gtfs.frequency.trip_id</code>.
     */
    public void setTripId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>gtfs.frequency.trip_id</code>.
     */
    public String getTripId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>gtfs.frequency.start_time</code>.
     */
    public void setStartTime(Time value) {
        set(1, value);
    }

    /**
     * Getter for <code>gtfs.frequency.start_time</code>.
     */
    public Time getStartTime() {
        return (Time) get(1);
    }

    /**
     * Setter for <code>gtfs.frequency.end_time</code>.
     */
    public void setEndTime(Time value) {
        set(2, value);
    }

    /**
     * Getter for <code>gtfs.frequency.end_time</code>.
     */
    public Time getEndTime() {
        return (Time) get(2);
    }

    /**
     * Setter for <code>gtfs.frequency.headway_secs</code>.
     */
    public void setHeadwaySecs(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>gtfs.frequency.headway_secs</code>.
     */
    public UInteger getHeadwaySecs() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>gtfs.frequency.exact_times</code>.
     */
    public void setExactTimes(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>gtfs.frequency.exact_times</code>.
     */
    public Byte getExactTimes() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>gtfs.frequency.feed_version</code>.
     */
    public void setFeedVersion(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>gtfs.frequency.feed_version</code>.
     */
    public String getFeedVersion() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record3<Time, String, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, Time, Time, UInteger, Byte, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, Time, Time, UInteger, Byte, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Frequency.FREQUENCY.TRIP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Time> field2() {
        return Frequency.FREQUENCY.START_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Time> field3() {
        return Frequency.FREQUENCY.END_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field4() {
        return Frequency.FREQUENCY.HEADWAY_SECS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field5() {
        return Frequency.FREQUENCY.EXACT_TIMES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Frequency.FREQUENCY.FEED_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getTripId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Time component2() {
        return getStartTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Time component3() {
        return getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component4() {
        return getHeadwaySecs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component5() {
        return getExactTimes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getFeedVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getTripId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Time value2() {
        return getStartTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Time value3() {
        return getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value4() {
        return getHeadwaySecs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value5() {
        return getExactTimes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getFeedVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FrequencyRecord value1(String value) {
        setTripId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FrequencyRecord value2(Time value) {
        setStartTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FrequencyRecord value3(Time value) {
        setEndTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FrequencyRecord value4(UInteger value) {
        setHeadwaySecs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FrequencyRecord value5(Byte value) {
        setExactTimes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FrequencyRecord value6(String value) {
        setFeedVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FrequencyRecord values(String value1, Time value2, Time value3, UInteger value4, Byte value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FrequencyRecord
     */
    public FrequencyRecord() {
        super(Frequency.FREQUENCY);
    }

    /**
     * Create a detached, initialised FrequencyRecord
     */
    public FrequencyRecord(String tripId, Time startTime, Time endTime, UInteger headwaySecs, Byte exactTimes, String feedVersion) {
        super(Frequency.FREQUENCY);

        set(0, tripId);
        set(1, startTime);
        set(2, endTime);
        set(3, headwaySecs);
        set(4, exactTimes);
        set(5, feedVersion);
    }
}
