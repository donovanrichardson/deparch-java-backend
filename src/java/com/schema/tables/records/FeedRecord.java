/*
 * This file is generated by jOOQ.
 */
package com.schema.tables.records;


import com.schema.tables.Feed;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FeedRecord extends UpdatableRecordImpl<FeedRecord> implements Record5<String, String, String, Integer, String> {

    private static final long serialVersionUID = -92797127;

    /**
     * Setter for <code>gtfs.feed.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>gtfs.feed.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>gtfs.feed.type</code>.
     */
    public void setType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gtfs.feed.type</code>.
     */
    public String getType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gtfs.feed.title</code>.
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>gtfs.feed.title</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>gtfs.feed.location</code>.
     */
    public void setLocation(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>gtfs.feed.location</code>.
     */
    public Integer getLocation() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>gtfs.feed.latest</code>.
     */
    public void setLatest(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>gtfs.feed.latest</code>.
     */
    public String getLatest() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, String, String, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, String, String, Integer, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Feed.FEED.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Feed.FEED.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Feed.FEED.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Feed.FEED.LOCATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Feed.FEED.LATEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getLocation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getLatest();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getLocation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getLatest();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedRecord value1(String value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedRecord value2(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedRecord value3(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedRecord value4(Integer value) {
        setLocation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedRecord value5(String value) {
        setLatest(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeedRecord values(String value1, String value2, String value3, Integer value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FeedRecord
     */
    public FeedRecord() {
        super(Feed.FEED);
    }

    /**
     * Create a detached, initialised FeedRecord
     */
    public FeedRecord(String id, String type, String title, Integer location, String latest) {
        super(Feed.FEED);

        set(0, id);
        set(1, type);
        set(2, title);
        set(3, location);
        set(4, latest);
    }
}
