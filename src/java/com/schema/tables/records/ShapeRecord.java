/*
 * This file is generated by jOOQ.
 */
package com.schema.tables.records;


import com.schema.tables.Shape;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShapeRecord extends UpdatableRecordImpl<ShapeRecord> implements Record6<String, Double, Double, UInteger, Double, String> {

    private static final long serialVersionUID = -610455229;

    /**
     * Setter for <code>gtfs.shape.shape_id</code>.
     */
    public void setShapeId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>gtfs.shape.shape_id</code>.
     */
    public String getShapeId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>gtfs.shape.shape_pt_lat</code>.
     */
    public void setShapePtLat(Double value) {
        set(1, value);
    }

    /**
     * Getter for <code>gtfs.shape.shape_pt_lat</code>.
     */
    public Double getShapePtLat() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>gtfs.shape.shape_pt_lon</code>.
     */
    public void setShapePtLon(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>gtfs.shape.shape_pt_lon</code>.
     */
    public Double getShapePtLon() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>gtfs.shape.shape_pt_sequence</code>.
     */
    public void setShapePtSequence(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>gtfs.shape.shape_pt_sequence</code>.
     */
    public UInteger getShapePtSequence() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>gtfs.shape.shape_dist_traveled</code>.
     */
    public void setShapeDistTraveled(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>gtfs.shape.shape_dist_traveled</code>.
     */
    public Double getShapeDistTraveled() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>gtfs.shape.feed_version</code>.
     */
    public void setFeedVersion(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>gtfs.shape.feed_version</code>.
     */
    public String getFeedVersion() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record3<String, String, UInteger> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, Double, Double, UInteger, Double, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, Double, Double, UInteger, Double, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Shape.SHAPE.SHAPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field2() {
        return Shape.SHAPE.SHAPE_PT_LAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return Shape.SHAPE.SHAPE_PT_LON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field4() {
        return Shape.SHAPE.SHAPE_PT_SEQUENCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return Shape.SHAPE.SHAPE_DIST_TRAVELED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Shape.SHAPE.FEED_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getShapeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component2() {
        return getShapePtLat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component3() {
        return getShapePtLon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component4() {
        return getShapePtSequence();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component5() {
        return getShapeDistTraveled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getFeedVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getShapeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value2() {
        return getShapePtLat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getShapePtLon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value4() {
        return getShapePtSequence();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getShapeDistTraveled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getFeedVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShapeRecord value1(String value) {
        setShapeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShapeRecord value2(Double value) {
        setShapePtLat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShapeRecord value3(Double value) {
        setShapePtLon(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShapeRecord value4(UInteger value) {
        setShapePtSequence(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShapeRecord value5(Double value) {
        setShapeDistTraveled(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShapeRecord value6(String value) {
        setFeedVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShapeRecord values(String value1, Double value2, Double value3, UInteger value4, Double value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ShapeRecord
     */
    public ShapeRecord() {
        super(Shape.SHAPE);
    }

    /**
     * Create a detached, initialised ShapeRecord
     */
    public ShapeRecord(String shapeId, Double shapePtLat, Double shapePtLon, UInteger shapePtSequence, Double shapeDistTraveled, String feedVersion) {
        super(Shape.SHAPE);

        set(0, shapeId);
        set(1, shapePtLat);
        set(2, shapePtLon);
        set(3, shapePtSequence);
        set(4, shapeDistTraveled);
        set(5, feedVersion);
    }
}
