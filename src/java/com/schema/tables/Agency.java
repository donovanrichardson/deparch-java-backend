/*
 * This file is generated by jOOQ.
 */
package com.schema.tables;


import com.schema.Gtfs;
import com.schema.Indexes;
import com.schema.Keys;
import com.schema.tables.records.AgencyRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Agency extends TableImpl<AgencyRecord> {

    private static final long serialVersionUID = 1465319305;

    /**
     * The reference instance of <code>gtfs.agency</code>
     */
    public static final Agency AGENCY = new Agency();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AgencyRecord> getRecordType() {
        return AgencyRecord.class;
    }

    /**
     * The column <code>gtfs.agency.key</code>.
     */
    public final TableField<AgencyRecord, UInteger> KEY = createField("key", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>gtfs.agency.agency_id</code>.
     */
    public final TableField<AgencyRecord, String> AGENCY_ID = createField("agency_id", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>gtfs.agency.agency_name</code>.
     */
    public final TableField<AgencyRecord, String> AGENCY_NAME = createField("agency_name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>gtfs.agency.agency_url</code>.
     */
    public final TableField<AgencyRecord, String> AGENCY_URL = createField("agency_url", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>gtfs.agency.agency_timezone</code>.
     */
    public final TableField<AgencyRecord, String> AGENCY_TIMEZONE = createField("agency_timezone", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>gtfs.agency.feed_version</code>.
     */
    public final TableField<AgencyRecord, String> FEED_VERSION = createField("feed_version", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>gtfs.agency</code> table reference
     */
    public Agency() {
        this(DSL.name("agency"), null);
    }

    /**
     * Create an aliased <code>gtfs.agency</code> table reference
     */
    public Agency(String alias) {
        this(DSL.name(alias), AGENCY);
    }

    /**
     * Create an aliased <code>gtfs.agency</code> table reference
     */
    public Agency(Name alias) {
        this(alias, AGENCY);
    }

    private Agency(Name alias, Table<AgencyRecord> aliased) {
        this(alias, aliased, null);
    }

    private Agency(Name alias, Table<AgencyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Agency(Table<O> child, ForeignKey<O, AgencyRecord> key) {
        super(child, key, AGENCY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gtfs.GTFS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.AGENCY_AGENCY_ID, Indexes.AGENCY_FEED_VERSION, Indexes.AGENCY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AgencyRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_AGENCY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AgencyRecord> getPrimaryKey() {
        return Keys.KEY_AGENCY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AgencyRecord>> getKeys() {
        return Arrays.<UniqueKey<AgencyRecord>>asList(Keys.KEY_AGENCY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AgencyRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AgencyRecord, ?>>asList(Keys.AGENCY_IBFK_1);
    }

    public FeedVersion feedVersion() {
        return new FeedVersion(this, Keys.AGENCY_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Agency as(String alias) {
        return new Agency(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Agency as(Name alias) {
        return new Agency(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Agency rename(String name) {
        return new Agency(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Agency rename(Name name) {
        return new Agency(name, null);
    }
}
