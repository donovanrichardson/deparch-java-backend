/*
 * This file is generated by jOOQ.
 */
package com.schema.tables;


import com.schema.Gtfs;
import com.schema.Indexes;
import com.schema.Keys;
import com.schema.tables.records.StopTimeRecord;

import java.sql.Time;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StopTime extends TableImpl<StopTimeRecord> {

    private static final long serialVersionUID = -2037361942;

    /**
     * The reference instance of <code>gtfs.stop_time</code>
     */
    public static final StopTime STOP_TIME = new StopTime();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StopTimeRecord> getRecordType() {
        return StopTimeRecord.class;
    }

    /**
     * The column <code>gtfs.stop_time.trip_id</code>.
     */
    public final TableField<StopTimeRecord, String> TRIP_ID = createField("trip_id", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>gtfs.stop_time.arrival_time</code>.
     */
    public final TableField<StopTimeRecord, Time> ARRIVAL_TIME = createField("arrival_time", org.jooq.impl.SQLDataType.TIME, this, "");

    /**
     * The column <code>gtfs.stop_time.departure_time</code>.
     */
    public final TableField<StopTimeRecord, Time> DEPARTURE_TIME = createField("departure_time", org.jooq.impl.SQLDataType.TIME, this, "");

    /**
     * The column <code>gtfs.stop_time.stop_id</code>.
     */
    public final TableField<StopTimeRecord, String> STOP_ID = createField("stop_id", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>gtfs.stop_time.stop_sequence</code>.
     */
    public final TableField<StopTimeRecord, UInteger> STOP_SEQUENCE = createField("stop_sequence", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>gtfs.stop_time.stop_headsign</code>.
     */
    public final TableField<StopTimeRecord, String> STOP_HEADSIGN = createField("stop_headsign", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>gtfs.stop_time.pickup_type</code>.
     */
    public final TableField<StopTimeRecord, UByte> PICKUP_TYPE = createField("pickup_type", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>gtfs.stop_time.drop_off_type</code>.
     */
    public final TableField<StopTimeRecord, UByte> DROP_OFF_TYPE = createField("drop_off_type", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * The column <code>gtfs.stop_time.shape_dist_traveled</code>.
     */
    public final TableField<StopTimeRecord, Double> SHAPE_DIST_TRAVELED = createField("shape_dist_traveled", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>gtfs.stop_time.timepoint</code>.
     */
    public final TableField<StopTimeRecord, Byte> TIMEPOINT = createField("timepoint", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>gtfs.stop_time.feed_version</code>.
     */
    public final TableField<StopTimeRecord, String> FEED_VERSION = createField("feed_version", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>gtfs.stop_time</code> table reference
     */
    public StopTime() {
        this(DSL.name("stop_time"), null);
    }

    /**
     * Create an aliased <code>gtfs.stop_time</code> table reference
     */
    public StopTime(String alias) {
        this(DSL.name(alias), STOP_TIME);
    }

    /**
     * Create an aliased <code>gtfs.stop_time</code> table reference
     */
    public StopTime(Name alias) {
        this(alias, STOP_TIME);
    }

    private StopTime(Name alias, Table<StopTimeRecord> aliased) {
        this(alias, aliased, null);
    }

    private StopTime(Name alias, Table<StopTimeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> StopTime(Table<O> child, ForeignKey<O, StopTimeRecord> key) {
        super(child, key, STOP_TIME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gtfs.GTFS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STOP_TIME_PRIMARY, Indexes.STOP_TIME_STOP_ID, Indexes.STOP_TIME_STOP_TIME_FEED_VERSION_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StopTimeRecord> getPrimaryKey() {
        return Keys.KEY_STOP_TIME_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StopTimeRecord>> getKeys() {
        return Arrays.<UniqueKey<StopTimeRecord>>asList(Keys.KEY_STOP_TIME_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StopTimeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StopTimeRecord, ?>>asList(Keys.STOP_TIME_IBFK_1, Keys.STOP_TIME_FEED_VERSION_FK);
    }

    public Stop stop() {
        return new Stop(this, Keys.STOP_TIME_IBFK_1);
    }

    public FeedVersion feedVersion() {
        return new FeedVersion(this, Keys.STOP_TIME_FEED_VERSION_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StopTime as(String alias) {
        return new StopTime(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StopTime as(Name alias) {
        return new StopTime(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StopTime rename(String name) {
        return new StopTime(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StopTime rename(Name name) {
        return new StopTime(name, null);
    }
}
