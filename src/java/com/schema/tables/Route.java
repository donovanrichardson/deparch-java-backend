/*
 * This file is generated by jOOQ.
 */
package com.schema.tables;


import com.schema.Gtfs;
import com.schema.Indexes;
import com.schema.Keys;
import com.schema.tables.records.RouteRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Route extends TableImpl<RouteRecord> {

    private static final long serialVersionUID = -13541018;

    /**
     * The reference instance of <code>gtfs.route</code>
     */
    public static final Route ROUTE = new Route();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RouteRecord> getRecordType() {
        return RouteRecord.class;
    }

    /**
     * The column <code>gtfs.route.route_id</code>.
     */
    public final TableField<RouteRecord, String> ROUTE_ID = createField("route_id", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>gtfs.route.agency_id</code>.
     */
    public final TableField<RouteRecord, String> AGENCY_ID = createField("agency_id", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>gtfs.route.default_name</code>. route_short_name
     */
    public final TableField<RouteRecord, String> DEFAULT_NAME = createField("default_name", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "route_short_name");

    /**
     * The column <code>gtfs.route.route_long_name</code>.
     */
    public final TableField<RouteRecord, String> ROUTE_LONG_NAME = createField("route_long_name", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>gtfs.route.route_desc</code>.
     */
    public final TableField<RouteRecord, String> ROUTE_DESC = createField("route_desc", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>gtfs.route.route_type</code>.
     */
    public final TableField<RouteRecord, Byte> ROUTE_TYPE = createField("route_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>gtfs.route.route_url</code>.
     */
    public final TableField<RouteRecord, String> ROUTE_URL = createField("route_url", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>gtfs.route.route_color</code>.
     */
    public final TableField<RouteRecord, String> ROUTE_COLOR = createField("route_color", org.jooq.impl.SQLDataType.CHAR(6).defaultValue(org.jooq.impl.DSL.inline("FFFFFF", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>gtfs.route.route_text_color</code>.
     */
    public final TableField<RouteRecord, String> ROUTE_TEXT_COLOR = createField("route_text_color", org.jooq.impl.SQLDataType.CHAR(6).defaultValue(org.jooq.impl.DSL.inline("000000", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>gtfs.route.route_sort_order</code>.
     */
    public final TableField<RouteRecord, UInteger> ROUTE_SORT_ORDER = createField("route_sort_order", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>gtfs.route.feed_version</code>.
     */
    public final TableField<RouteRecord, String> FEED_VERSION = createField("feed_version", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>gtfs.route</code> table reference
     */
    public Route() {
        this(DSL.name("route"), null);
    }

    /**
     * Create an aliased <code>gtfs.route</code> table reference
     */
    public Route(String alias) {
        this(DSL.name(alias), ROUTE);
    }

    /**
     * Create an aliased <code>gtfs.route</code> table reference
     */
    public Route(Name alias) {
        this(alias, ROUTE);
    }

    private Route(Name alias, Table<RouteRecord> aliased) {
        this(alias, aliased, null);
    }

    private Route(Name alias, Table<RouteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Route(Table<O> child, ForeignKey<O, RouteRecord> key) {
        super(child, key, ROUTE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gtfs.GTFS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ROUTE_AGENCY_ID, Indexes.ROUTE_PRIMARY, Indexes.ROUTE_ROUTE_FEED_VERSION_FK, Indexes.ROUTE_ROUTE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RouteRecord> getPrimaryKey() {
        return Keys.KEY_ROUTE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RouteRecord>> getKeys() {
        return Arrays.<UniqueKey<RouteRecord>>asList(Keys.KEY_ROUTE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RouteRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RouteRecord, ?>>asList(Keys.ROUTE_FEED_VERSION_FK);
    }

    public FeedVersion feedVersion() {
        return new FeedVersion(this, Keys.ROUTE_FEED_VERSION_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Route as(String alias) {
        return new Route(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Route as(Name alias) {
        return new Route(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Route rename(String name) {
        return new Route(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Route rename(Name name) {
        return new Route(name, null);
    }
}
